//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.02.23 at 11:11:43 GMT+01:00 
//


package freemind.controller.actions.generated.instance.impl;

public class PluginActionImpl
    extends freemind.controller.actions.generated.instance.impl.PluginActionTypeImpl
    implements freemind.controller.actions.generated.instance.PluginAction, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, freemind.controller.actions.generated.instance.impl.runtime.UnmarshallableObject, freemind.controller.actions.generated.instance.impl.runtime.XMLSerializable, freemind.controller.actions.generated.instance.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (freemind.controller.actions.generated.instance.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "plugin_action";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (freemind.controller.actions.generated.instance.PluginAction.class);
    }

    public freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingEventHandler createUnmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
        return new freemind.controller.actions.generated.instance.impl.PluginActionImpl.Unmarshaller(context);
    }

    public void serializeElementBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "plugin_action");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "plugin_action");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (freemind.controller.actions.generated.instance.PluginAction.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0017Yi\u009cp"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0017Yi\u0091ppsq\u0000~\u0000\u0007\u0014~I\u0005ppsq\u0000~\u0000\u0007\u0012\u00b1\u00aa\u00f0ppsq\u0000~\u0000\u0007\u000fcO\u00fbppsq\u0000~\u0000\u0007\r%\u00a4\u00abppsq\u0000~"
+"\u0000\u0007\n\u008b\u00f5\u00c6ppsq\u0000~\u0000\u0007\b\u0097i\u00fdppsq\u0000~\u0000\u0007\u0006:$\u00fcppsq\u0000~\u0000\u0007\u0004~\u00e7cppsq\u0000~\u0000\u0007\u0002\u00ffD\u00ebppsr\u0000\u001d"
+"com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u007f\u00a2sppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001\u007f\u00a2hsr\u0000\u0011java.lang.Boo"
+"lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0013\u0001\u007f\u00a2eq\u0000~\u0000\u0019psq\u0000~\u0000\u0000\u0000\u00bf\u00d17q\u0000~\u0000\u0019p\u0000"
+"sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,pp\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!ppsq\u0000~\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psr\u0000 com.sun.msv.gra"
+"mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~"
+"\u0000\u0004\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0019psr\u00002com.sun.msv.grammar.Expression$AnyStringExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u0018\u0001psr\u0000 com.sun.msv.grammar.A"
+"nyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000#q\u0000~\u0000(sr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnam"
+"espaceURIq\u0000~\u0000*xq\u0000~\u0000%t\u0000=freemind.controller.actions.generated"
+".instance.PluginModeTypet\u0000+http://java.sun.com/jaxb/xjc/dumm"
+"y-elementssq\u0000~\u0000)t\u0000\u000bplugin_modet\u0000\u0000sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!"
+"ppsq\u0000~\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psq\u0000~\u0000\u001f\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0019pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00009fr"
+"eemind.controller.actions.generated.instance.PluginModeq\u0000~\u0000-"
+"q\u0000~\u0000(sq\u0000~\u0000\u0013\u0001\u007f\u00a2sppsq\u0000~\u0000\u0015\u0001\u007f\u00a2hq\u0000~\u0000\u0019psq\u0000~\u0000\u0013\u0001\u007f\u00a2eq\u0000~\u0000\u0019psq\u0000~\u0000\u0000\u0000\u00bf\u00d17q"
+"\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,pp\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!ppsq\u0000~\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psq\u0000~\u0000\u001f\u0000\u00bf\u00d1\u0013q\u0000~"
+"\u0000\u0019pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000=freemind.controller.actions.gener"
+"ated.instance.PluginMenuTypeq\u0000~\u0000-sq\u0000~\u0000)t\u0000\u000bplugin_menuq\u0000~\u00000sq"
+"\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!ppsq\u0000~\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psq\u0000~\u0000\u001f\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0019pq"
+"\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00009freemind.controller.actions.generated"
+".instance.PluginMenuq\u0000~\u0000-q\u0000~\u0000(sq\u0000~\u0000\u0013\u0001\u007f\u00a2sppsq\u0000~\u0000\u0015\u0001\u007f\u00a2hq\u0000~\u0000\u0019psq"
+"\u0000~\u0000\u0013\u0001\u007f\u00a2eq\u0000~\u0000\u0019psq\u0000~\u0000\u0000\u0000\u00bf\u00d17q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,pp\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!ppsq\u0000~"
+"\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psq\u0000~\u0000\u001f\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0019pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000Afreemind"
+".controller.actions.generated.instance.PluginPropertyTypeq\u0000~"
+"\u0000-sq\u0000~\u0000)t\u0000\u000fplugin_propertyq\u0000~\u00000sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0013\u0000\u00bf\u00d1!pp"
+"sq\u0000~\u0000\u0015\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0019psq\u0000~\u0000\u001f\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0019pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000=free"
+"mind.controller.actions.generated.instance.PluginPropertyq\u0000~"
+"\u0000-q\u0000~\u0000(sq\u0000~\u0000\u0013\u0001\u00bb=\u0094ppsq\u0000~\u0000\u001f\u0001\u00bb=\u0089q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.grammar.D"
+"ataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006e"
+"xceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0001\u0086\u00d4\u0094p"
+"psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwa"
+"ysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUriq\u0000~\u0000*L\u0000\btypeNameq\u0000~\u0000*L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$N"
+"ullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util."
+"StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000*L\u0000\fnamespaceURIq\u0000~\u0000*xp"
+"q\u0000~\u0000hq\u0000~\u0000gsq\u0000~\u0000)t\u0000\nkey_strokeq\u0000~\u00000q\u0000~\u0000(sq\u0000~\u0000\u001f\u0002]D\u00fcppq\u0000~\u0000`sq\u0000~"
+"\u0000)t\u0000\u0004baseq\u0000~\u00000sq\u0000~\u0000\u0013\u0001\u00f4\u008b\u00c4ppsq\u0000~\u0000\u001f\u0001\u00f4\u008b\u00b9q\u0000~\u0000\u0019pq\u0000~\u0000`sq\u0000~\u0000)t\u0000\u0004name"
+"q\u0000~\u00000q\u0000~\u0000(sq\u0000~\u0000\u0013\u0002\u0099\u00ae\u00e0ppsq\u0000~\u0000\u001f\u0002\u0099\u00ae\u00d5q\u0000~\u0000\u0019pq\u0000~\u0000`sq\u0000~\u0000)t\u0000\rdocument"
+"ationq\u0000~\u00000q\u0000~\u0000(sq\u0000~\u0000\u0013\u0002=\u00abKppsq\u0000~\u0000\u001f\u0002=\u00ab@q\u0000~\u0000\u0019pq\u0000~\u0000`sq\u0000~\u0000)t\u0000\tico"
+"n_pathq\u0000~\u00000q\u0000~\u0000(sq\u0000~\u0000\u001f\u0003NZ\u00f0ppq\u0000~\u0000`sq\u0000~\u0000)t\u0000\nclass_nameq\u0000~\u00000sq\u0000"
+"~\u0000\u001f\u0001\u00cc\u009e\u0010ppq\u0000~\u0000`sq\u0000~\u0000)t\u0000\u0005labelq\u0000~\u00000sq\u0000~\u0000\u0013\u0002\u00db \u0087ppsq\u0000~\u0000\u001f\u0002\u00db |q\u0000~\u0000\u0019"
+"psq\u0000~\u0000]\u0001,TAppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype"
+".xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixed"
+"Z\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd"
+"/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/"
+"ConcreteType;L\u0000\tfacetNameq\u0000~\u0000*xq\u0000~\u0000dq\u0000~\u00000psr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000j\u0000\u0000sr"
+"\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000aq\u0000~\u0000gt\u0000"
+"\u0005tokenq\u0000~\u0000\u0092\u0001q\u0000~\u0000\u0094t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74"
+"\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005t\u0000\u000bOnceForRoott\u0000\u0004Oncet\u0000\u000bApplyToRoott\u0000\u0005Oth"
+"ert\u0000\u000fOnceForAllNodesxq\u0000~\u0000msq\u0000~\u0000nt\u0000\rtoken-derivedq\u0000~\u00000sq\u0000~\u0000)t"
+"\u0000\rinstanciationq\u0000~\u00000q\u0000~\u0000(sq\u0000~\u0000)t\u0000\rplugin_actionq\u0000~\u00000sr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthres"
+"holdL\u0000\u0006parentq\u0000~\u0000\u00a5[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressio"
+"n;xp\u0000\u0000\u0000$\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000"
+"\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tq\u0000~"
+"\u0000\u001eq\u0000~\u00003q\u0000~\u0000=q\u0000~\u0000Eq\u0000~\u0000Oq\u0000~\u0000Wpppppq\u0000~\u0000\u001dq\u0000~\u00002q\u0000~\u0000<q\u0000~\u0000Dq\u0000~\u0000Nq\u0000~"
+"\u0000Vq\u0000~\u0000\u000bpppppppppppppppppq\u0000~\u0000\u000epppppppq\u0000~\u0000ypppppppppq\u0000~\u0000\u0010pq\u0000~\u0000"
+"\fpq\u0000~\u0000uppppppppq\u0000~\u0000}q\u0000~\u0000\npppq\u0000~\u0000\u0011pq\u0000~\u0000\u0087ppppppppppppppppppppq"
+"\u0000~\u0000\u0012ppppppppq\u0000~\u0000\u001aq\u0000~\u00009q\u0000~\u0000Kq\u0000~\u0000\u0017q\u0000~\u00008q\u0000~\u0000Jppppppppq\u0000~\u0000\u0014q\u0000~\u00007"
+"q\u0000~\u0000Iq\u0000~\u0000\u000fpq\u0000~\u0000[ppppppq\u0000~\u0000\rppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends freemind.controller.actions.generated.instance.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return freemind.controller.actions.generated.instance.impl.PluginActionImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "key_stroke");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("plugin_action" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("plugin_action" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "key_stroke");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("key_stroke" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((freemind.controller.actions.generated.instance.impl.PluginActionTypeImpl)freemind.controller.actions.generated.instance.impl.PluginActionImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("base" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((freemind.controller.actions.generated.instance.impl.PluginActionTypeImpl)freemind.controller.actions.generated.instance.impl.PluginActionImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "key_stroke");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "base");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "key_stroke");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "base");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}

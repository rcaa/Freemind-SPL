//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.02.23 at 11:11:43 GMT+01:00 
//


package freemind.controller.actions.generated.instance.impl;

public class AddArrowLinkXmlActionTypeImpl
    extends freemind.controller.actions.generated.instance.impl.NodeActionImpl
    implements freemind.controller.actions.generated.instance.AddArrowLinkXmlActionType, com.sun.xml.bind.JAXBObject, freemind.controller.actions.generated.instance.impl.runtime.UnmarshallableObject, freemind.controller.actions.generated.instance.impl.runtime.XMLSerializable, freemind.controller.actions.generated.instance.impl.runtime.ValidatableObject
{

    protected java.lang.String _EndInclination;
    protected java.lang.String _StartArrow;
    protected java.lang.String _StartInclination;
    protected java.lang.String _EndArrow;
    protected java.lang.String _Destination;
    protected java.lang.String _NewId;
    protected java.lang.String _Color;
    public final static java.lang.Class version = (freemind.controller.actions.generated.instance.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (freemind.controller.actions.generated.instance.AddArrowLinkXmlActionType.class);
    }

    public java.lang.String getEndInclination() {
        return _EndInclination;
    }

    public void setEndInclination(java.lang.String value) {
        _EndInclination = value;
    }

    public java.lang.String getStartArrow() {
        return _StartArrow;
    }

    public void setStartArrow(java.lang.String value) {
        _StartArrow = value;
    }

    public java.lang.String getStartInclination() {
        return _StartInclination;
    }

    public void setStartInclination(java.lang.String value) {
        _StartInclination = value;
    }

    public java.lang.String getEndArrow() {
        return _EndArrow;
    }

    public void setEndArrow(java.lang.String value) {
        _EndArrow = value;
    }

    public java.lang.String getDestination() {
        return _Destination;
    }

    public void setDestination(java.lang.String value) {
        _Destination = value;
    }

    public java.lang.String getNewId() {
        return _NewId;
    }

    public void setNewId(java.lang.String value) {
        _NewId = value;
    }

    public java.lang.String getColor() {
        return _Color;
    }

    public void setColor(java.lang.String value) {
        _Color = value;
    }

    public freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingEventHandler createUnmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
        return new freemind.controller.actions.generated.instance.impl.AddArrowLinkXmlActionTypeImpl.Unmarshaller(context);
    }

    public void serializeElementBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
    }

    public void serializeAttributes(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_NewId!= null) {
            context.startAttribute("", "new_id");
            try {
                context.text(((java.lang.String) _NewId));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_StartArrow!= null) {
            context.startAttribute("", "startArrow");
            try {
                context.text(((java.lang.String) _StartArrow));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_EndArrow!= null) {
            context.startAttribute("", "endArrow");
            try {
                context.text(((java.lang.String) _EndArrow));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "destination");
        try {
            context.text(((java.lang.String) _Destination));
        } catch (java.lang.Exception e) {
            freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_EndInclination!= null) {
            context.startAttribute("", "endInclination");
            try {
                context.text(((java.lang.String) _EndInclination));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_StartInclination!= null) {
            context.startAttribute("", "startInclination");
            try {
                context.text(((java.lang.String) _StartInclination));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Color!= null) {
            context.startAttribute("", "color");
            try {
                context.text(((java.lang.String) _Color));
            } catch (java.lang.Exception e) {
                freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
    }

    public void serializeURIs(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (freemind.controller.actions.generated.instance.AddArrowLinkXmlActionType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0014\u0090\u0010\u00bdppsq\u0000~\u0000\u0000\u0012t\u008c\u00e9ppsq\u0000~\u0000\u0000\u000f"
+"\u00b7:\u001cppsq\u0000~\u0000\u0000\r\u0011q4ppsq\u0000~\u0000\u0000\u000bL\u0005\u00cbppsq\u0000~\u0000\u0000\u0007\u00d2\u001a\u00d4ppsq\u0000~\u0000\u0000\u0005\u00da\u00e5%ppsr\u0000 com"
+".sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCl"
+"asst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003\u0003:\u000e\u00a3ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003\u0001\u0086\u00d4\u0094ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAto"
+"micType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nw"
+"hiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xp"
+"t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000#com.sun.msv.gram"
+"mar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceU"
+"RIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004node"
+"t\u0000\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00a0\u00d6}pps"
+"q\u0000~\u0000\f\u0002\u00a0\u00d6rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000pq\u0000~\u0000\u0012sq"
+"\u0000~\u0000#t\u0000\u0006new_idq\u0000~\u0000\'sr\u00000com.sun.msv.grammar.Expression$Epsilon"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000+\u0001q\u0000~\u00000sq\u0000~\u0000(\u0001\u00f75\u00aappsq\u0000~\u0000"
+"\f\u0001\u00f75\u009fq\u0000~\u0000,pq\u0000~\u0000\u0012sq\u0000~\u0000#t\u0000\nstartArrowq\u0000~\u0000\'q\u0000~\u00000sq\u0000~\u0000(\u0003y\u00ea\u00f2ppsq\u0000"
+"~\u0000\f\u0003y\u00ea\u00e7q\u0000~\u0000,pq\u0000~\u0000\u0012sq\u0000~\u0000#t\u0000\bendArrowq\u0000~\u0000\'q\u0000~\u00000sq\u0000~\u0000\f\u0001\u00c5kdppq\u0000~"
+"\u0000\u0012sq\u0000~\u0000#t\u0000\u000bdestinationq\u0000~\u0000\'sq\u0000~\u0000(\u0002\u00a5\u00c8\u00e3ppsq\u0000~\u0000\f\u0002\u00a5\u00c8\u00d8q\u0000~\u0000,pq\u0000~\u0000\u0012"
+"sq\u0000~\u0000#t\u0000\u000eendInclinationq\u0000~\u0000\'q\u0000~\u00000sq\u0000~\u0000(\u0002\u00bdR\u00c8ppsq\u0000~\u0000\f\u0002\u00bdR\u00bdq\u0000~\u0000,"
+"pq\u0000~\u0000\u0012sq\u0000~\u0000#t\u0000\u0010startInclinationq\u0000~\u0000\'q\u0000~\u00000sq\u0000~\u0000(\u0002\u001b\u0083\u00cfppsq\u0000~\u0000\f\u0002"
+"\u001b\u0083\u00c4q\u0000~\u0000,pq\u0000~\u0000\u0012sq\u0000~\u0000#t\u0000\u0005colorq\u0000~\u0000\'q\u0000~\u00000sr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq"
+"\u0000~\u0000J[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\r\u0000\u0000\u00009pu"
+"r\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppq\u0000~\u0000"
+"\tpppq\u0000~\u0000\nppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000\u0005pq\u0000~\u0000\u0007ppppppq\u0000~\u0000Appppppq\u0000~\u0000)pppppppppppppppppq\u0000~\u00002ppq"
+"\u0000~\u0000\u000bppq\u0000~\u0000\bpppppppq\u0000~\u0000Eppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppp"
+"pppppq\u0000~\u0000=pppppppppppppppppppppppppppppppppq\u0000~\u00006pppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends freemind.controller.actions.generated.instance.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------");
        }

        protected Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return freemind.controller.actions.generated.instance.impl.AddArrowLinkXmlActionTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "color");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "startInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "node");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "destination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "endInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "new_id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "startArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "endArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Color = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartInclination = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Destination = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EndInclination = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartArrow = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EndArrow = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        attIdx = context.getAttribute("", "color");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "startInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  21 :
                        attIdx = context.getAttribute("", "node");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "destination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "endInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "new_id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "startArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "endArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        if (("color" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  15 :
                        if (("startInclination" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  21 :
                        if (("node" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((freemind.controller.actions.generated.instance.impl.NodeActionImpl)freemind.controller.actions.generated.instance.impl.AddArrowLinkXmlActionTypeImpl.this).new Unmarshaller(context)), 22, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("endInclination" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("new_id" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("startArrow" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("endArrow" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        if (("endInclination" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "color");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  11 :
                        if (("destination" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("startInclination" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "startInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  20 :
                        if (("color" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "node");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("startArrow" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("endArrow" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("new_id" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "destination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "endInclination");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "new_id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "startArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "endArrow");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  22 :
                            revertToParentFromText(value);
                            return ;
                        case  19 :
                            eatText0(value);
                            state = 20;
                            return ;
                        case  16 :
                            eatText1(value);
                            state = 17;
                            return ;
                        case  4 :
                            eatText5(value);
                            state = 5;
                            return ;
                        case  1 :
                            eatText4(value);
                            state = 2;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "color");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "startInclination");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  7 :
                            eatText6(value);
                            state = 8;
                            return ;
                        case  21 :
                            attIdx = context.getAttribute("", "node");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            eatText2(value);
                            state = 11;
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "destination");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  12 :
                            attIdx = context.getAttribute("", "endInclination");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "new_id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "startArrow");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "endArrow");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}

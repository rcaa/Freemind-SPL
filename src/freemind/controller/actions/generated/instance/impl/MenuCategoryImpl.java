//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.02.23 at 11:11:43 GMT+01:00 
//

package freemind.controller.actions.generated.instance.impl;

public class MenuCategoryImpl
		extends
		freemind.controller.actions.generated.instance.impl.MenuCategoryTypeImpl
		implements
		freemind.controller.actions.generated.instance.MenuCategory,
		com.sun.xml.bind.JAXBObject,
		com.sun.xml.bind.RIElement,
		freemind.controller.actions.generated.instance.impl.runtime.UnmarshallableObject,
		freemind.controller.actions.generated.instance.impl.runtime.XMLSerializable,
		freemind.controller.actions.generated.instance.impl.runtime.ValidatableObject {

	public final static java.lang.Class version = (freemind.controller.actions.generated.instance.impl.JAXBVersion.class);
	private static com.sun.msv.grammar.Grammar schemaFragment;

	public java.lang.String ____jaxb_ri____getNamespaceURI() {
		return "";
	}

	public java.lang.String ____jaxb_ri____getLocalName() {
		return "menu_category";
	}

	private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
		return (freemind.controller.actions.generated.instance.MenuCategory.class);
	}

	public freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingEventHandler createUnmarshaller(
			freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
		return new freemind.controller.actions.generated.instance.impl.MenuCategoryImpl.Unmarshaller(
				context);
	}

	public void serializeElementBody(
			freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		context.startElement("", "menu_category");
		super.serializeURIs(context);
		context.endNamespaceDecls();
		super.serializeAttributes(context);
		context.endAttributes();
		super.serializeElementBody(context);
		context.endElement();
	}

	public void serializeAttributes(
			freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	public void serializeAttributeBody(
			freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
		context.startElement("", "menu_category");
		super.serializeURIs(context);
		context.endNamespaceDecls();
		super.serializeAttributes(context);
		context.endAttributes();
		super.serializeElementBody(context);
		context.endElement();
	}

	public void serializeURIs(
			freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
			throws org.xml.sax.SAXException {
	}

	public java.lang.Class getPrimaryInterface() {
		return (freemind.controller.actions.generated.instance.MenuCategory.class);
	}

	public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
		if (schemaFragment == null) {
			schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer
					.deserialize(("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
							+ "\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
							+ "grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
							+ "\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
							+ "msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
							+ "Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0006k\u00bb\u0005p"
							+ "p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
							+ "msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
							+ "\u0000\u0004\u0006k\u00ba\u00fappsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0003\u00bf"
							+ "\u0015\u00f2ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
							+ "un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0003\u00bf\u0015\u00e7sr\u0000\u0011j"
							+ "ava.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\n\u0003\u00bf\u0015\u00e4q\u0000~\u0000\u0010psq\u0000~\u0000"
							+ "\n\u0002\u00ffD\u00b6q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0002?s\u0088q\u0000~\u0000\u0010psq\u0000~\u0000\n\u0001\u007f\u00a2Zq\u0000~\u0000\u0010psq\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0010p\u0000"
							+ "sq\u0000~\u0000\n\u0000\u00bf\u00d1!ppsq\u0000~\u0000\f\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0010psr\u0000 com.sun.msv.grammar.Attribut"
							+ "eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0010ps"
							+ "r\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
							+ "\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
							+ "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
							+ "om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
							+ "\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
							+ "\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000"
							+ "#xq\u0000~\u0000\u001et\u0000;freemind.controller.actions.generated.instance.Men"
							+ "uCategoryt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000"
							+ "\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0000\u00bf\u00d1!ppsq\u0000~\u0000\f\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0018\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0010pq\u0000~\u0000"
							+ "\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:freemind.controller.actions.generated.in"
							+ "stance.MenuSubmenuq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0000\u00bf\u00d1!ppsq\u0000~\u0000\f\u0000\u00bf"
							+ "\u00d1\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0018\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009freemind.con"
							+ "troller.actions.generated.instance.MenuActionq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,"
							+ "q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0000\u00bf\u00d1!ppsq\u0000~\u0000\f\u0000\u00bf\u00d1\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0018\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000"
							+ "\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000@freemind.controller.actions.generated.instanc"
							+ "e.MenuCheckedActionq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000\u00bf\u00d1,q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\n\u0000\u00bf\u00d1!ppsq\u0000~\u0000\f\u0000"
							+ "\u00bf\u00d1\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0018\u0000\u00bf\u00d1\u0013q\u0000~\u0000\u0010pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<freemind.co"
							+ "ntroller.actions.generated.instance.MenuSeparatorq\u0000~\u0000&q\u0000~\u0000!s"
							+ "q\u0000~\u0000\u0018\u0002\u00ac\u00a5\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000"
							+ "\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom"
							+ "/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0001\u0086\u00d4\u0094ppsr\u0000#com.sun.msv.datatyp"
							+ "e.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.d"
							+ "atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
							+ "type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
							+ ".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~"
							+ "\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
							+ "sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.su"
							+ "n.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
							+ "\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001"
							+ "sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
							+ "\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
							+ "localNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u0000Kq\u0000~\u0000Jsq\u0000~\u0000\"t\u0000\u0004namet"
							+ "\u0000\u0000sq\u0000~\u0000\"t\u0000\rmenu_categoryq\u0000~\u0000Usr\u0000\"com.sun.msv.grammar.Express"
							+ "ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
							+ "ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
							+ "ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000Y[\u0000\u0005ta"
							+ "blet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0011\u0000\u0000\u00009pur\u0000![Lcom."
							+ "sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppp"
							+ "pq\u0000~\u0000\u0013ppppppppppppppppppppppppppppq\u0000~\u0000\u0017q\u0000~\u0000)q\u0000~\u0000/q\u0000~\u00005q\u0000~\u0000;p"
							+ "pppppq\u0000~\u0000\u0016q\u0000~\u0000(q\u0000~\u0000.q\u0000~\u00004q\u0000~\u0000:pppppppppppppppppppppppppq\u0000~\u0000\u0012"
							+ "q\u0000~\u0000\tpppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0014p"
							+ "pppppppppppppppppq\u0000~\u0000\u0011ppq\u0000~\u0000\u000eppppppppppq\u0000~\u0000\u000bpppppppppppppppp"
							+ "ppp"));
		}
		return new com.sun.msv.verifier.regexp.REDocumentDeclaration(
				schemaFragment);
	}

	public class Unmarshaller
			extends
			freemind.controller.actions.generated.instance.impl.runtime.AbstractUnmarshallingEventHandlerImpl {

		public Unmarshaller(
				freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
			super(context, "----");
		}

		protected Unmarshaller(
				freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context,
				int startState) {
			this(context);
			state = startState;
		}

		public java.lang.Object owner() {
			return freemind.controller.actions.generated.instance.impl.MenuCategoryImpl.this;
		}

		public void enterElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname,
				org.xml.sax.Attributes __atts) throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 3:
					revertToParentFromEnterElement(___uri, ___local, ___qname,
							__atts);
					return;
				case 0:
					if (("menu_category" == ___local) && ("" == ___uri)) {
						context.pushAttributes(__atts, false);
						state = 1;
						return;
					}
					break;
				case 1:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().enterElement(___uri,
								___local, ___qname, __atts);
						return;
					}
					break;
				}
				super.enterElement(___uri, ___local, ___qname, __atts);
				break;
			}
		}

		public void leaveElement(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 3:
					revertToParentFromLeaveElement(___uri, ___local, ___qname);
					return;
				case 2:
					if (("menu_category" == ___local) && ("" == ___uri)) {
						context.popAttributes();
						state = 3;
						return;
					}
					break;
				case 1:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveElement(___uri,
								___local, ___qname);
						return;
					}
					break;
				}
				super.leaveElement(___uri, ___local, ___qname);
				break;
			}
		}

		public void enterAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 3:
					revertToParentFromEnterAttribute(___uri, ___local, ___qname);
					return;
				case 1:
					if (("name" == ___local) && ("" == ___uri)) {
						spawnHandlerFromEnterAttribute(
								(((freemind.controller.actions.generated.instance.impl.MenuCategoryTypeImpl) freemind.controller.actions.generated.instance.impl.MenuCategoryImpl.this).new Unmarshaller(
										context)), 2, ___uri, ___local,
								___qname);
						return;
					}
					break;
				}
				super.enterAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		public void leaveAttribute(java.lang.String ___uri,
				java.lang.String ___local, java.lang.String ___qname)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				switch (state) {
				case 3:
					revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
					return;
				case 1:
					attIdx = context.getAttribute("", "name");
					if (attIdx >= 0) {
						context.consumeAttribute(attIdx);
						context.getCurrentHandler().leaveAttribute(___uri,
								___local, ___qname);
						return;
					}
					break;
				}
				super.leaveAttribute(___uri, ___local, ___qname);
				break;
			}
		}

		public void handleText(final java.lang.String value)
				throws org.xml.sax.SAXException {
			int attIdx;
			outer: while (true) {
				try {
					switch (state) {
					case 3:
						revertToParentFromText(value);
						return;
					case 1:
						attIdx = context.getAttribute("", "name");
						if (attIdx >= 0) {
							context.consumeAttribute(attIdx);
							context.getCurrentHandler().text(value);
							return;
						}
						break;
					}
				} catch (java.lang.RuntimeException e) {
					handleUnexpectedTextException(value, e);
				}
				break;
			}
		}

	}

}

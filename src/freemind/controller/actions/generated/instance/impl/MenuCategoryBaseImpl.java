//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.02.23 at 11:11:43 GMT+01:00 
//


package freemind.controller.actions.generated.instance.impl;

public class MenuCategoryBaseImpl implements freemind.controller.actions.generated.instance.MenuCategoryBase, com.sun.xml.bind.JAXBObject, freemind.controller.actions.generated.instance.impl.runtime.UnmarshallableObject, freemind.controller.actions.generated.instance.impl.runtime.XMLSerializable, freemind.controller.actions.generated.instance.impl.runtime.ValidatableObject
{

    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _MenuCategoryOrMenuSubmenuOrMenuAction = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (freemind.controller.actions.generated.instance.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (freemind.controller.actions.generated.instance.MenuCategoryBase.class);
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getMenuCategoryOrMenuSubmenuOrMenuAction() {
        return _MenuCategoryOrMenuSubmenuOrMenuAction;
    }

    public freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingEventHandler createUnmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
        return new freemind.controller.actions.generated.instance.impl.MenuCategoryBaseImpl.Unmarshaller(context);
    }

    public void serializeElementBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _MenuCategoryOrMenuSubmenuOrMenuAction.size();
        while (idx2 != len2) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _MenuCategoryOrMenuSubmenuOrMenuAction.get(idx2 ++)));
        }
    }

    public void serializeAttributes(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _MenuCategoryOrMenuSubmenuOrMenuAction.size();
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name));
        } catch (java.lang.Exception e) {
            freemind.controller.actions.generated.instance.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx2 != len2) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MenuCategoryOrMenuSubmenuOrMenuAction.get(idx2 ++)));
        }
    }

    public void serializeAttributeBody(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _MenuCategoryOrMenuSubmenuOrMenuAction.size();
        while (idx2 != len2) {
            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _MenuCategoryOrMenuSubmenuOrMenuAction.get(idx2 ++)));
        }
    }

    public void serializeURIs(freemind.controller.actions.generated.instance.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = _MenuCategoryOrMenuSubmenuOrMenuAction.size();
        while (idx2 != len2) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MenuCategoryOrMenuSubmenuOrMenuAction.get(idx2 ++)));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (freemind.controller.actions.generated.instance.MenuCategoryBase.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006k\u00ba\u00fappsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00bf\u0015\u00f2ppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00bf\u0015\u00e7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0006\u0003\u00bf\u0015\u00e4q\u0000~\u0000\fpsq\u0000~\u0000\u0006\u0002\u00ffD\u00b6q\u0000~\u0000\fpsq\u0000~\u0000\u0006\u0002?s\u0088q\u0000~\u0000\fp"
+"sq\u0000~\u0000\u0006\u0001\u007f\u00a2Zq\u0000~\u0000\fpsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00bf\u00d1,q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0006\u0000\u00bf\u00d1!pps"
+"q\u0000~\u0000\b\u0000\u00bf\u00d1\u0016q\u0000~\u0000\fpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003\u0000\u00bf\u00d1\u0013q\u0000~\u0000\fpsr\u00002com.sun.ms"
+"v.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000"
+"\bsq\u0000~\u0000\u000b\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001d"
+"com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001b"
+"q\u0000~\u0000 sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000;fre"
+"emind.controller.actions.generated.instance.MenuCategoryt\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011\u0000\u00bf\u00d1,q\u0000~\u0000\fp\u0000s"
+"q\u0000~\u0000\u0006\u0000\u00bf\u00d1!ppsq\u0000~\u0000\b\u0000\u00bf\u00d1\u0016q\u0000~\u0000\fpsq\u0000~\u0000\u0017\u0000\u00bf\u00d1\u0013q\u0000~\u0000\fpq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq"
+"\u0000~\u0000!t\u0000:freemind.controller.actions.generated.instance.MenuSu"
+"bmenuq\u0000~\u0000%sq\u0000~\u0000\u0011\u0000\u00bf\u00d1,q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0006\u0000\u00bf\u00d1!ppsq\u0000~\u0000\b\u0000\u00bf\u00d1\u0016q\u0000~\u0000\fpsq\u0000~\u0000"
+"\u0017\u0000\u00bf\u00d1\u0013q\u0000~\u0000\fpq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00009freemind.controller.actio"
+"ns.generated.instance.MenuActionq\u0000~\u0000%sq\u0000~\u0000\u0011\u0000\u00bf\u00d1,q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0006"
+"\u0000\u00bf\u00d1!ppsq\u0000~\u0000\b\u0000\u00bf\u00d1\u0016q\u0000~\u0000\fpsq\u0000~\u0000\u0017\u0000\u00bf\u00d1\u0013q\u0000~\u0000\fpq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t"
+"\u0000@freemind.controller.actions.generated.instance.MenuChecked"
+"Actionq\u0000~\u0000%sq\u0000~\u0000\u0011\u0000\u00bf\u00d1,q\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0006\u0000\u00bf\u00d1!ppsq\u0000~\u0000\b\u0000\u00bf\u00d1\u0016q\u0000~\u0000\fpsq\u0000~"
+"\u0000\u0017\u0000\u00bf\u00d1\u0013q\u0000~\u0000\fpq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000<freemind.controller.acti"
+"ons.generated.instance.MenuSeparatorq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\u0017\u0002\u00ac\u00a5\u0003ppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003\u0001\u0086\u00d4\u0094ppsr\u0000#com.sun.msv.datatype.xsd.StringT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.B"
+"uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"
+"reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"
+"pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpa"
+"cet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http"
+"://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u0000Jq\u0000~\u0000Isq\u0000~\u0000!t\u0000\u0004namet\u0000\u0000sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthreshol"
+"dL\u0000\u0006parentq\u0000~\u0000V[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;x"
+"p\u0000\u0000\u0000\u0011\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp"
+"\u0000\u0000\u0000\u00bfpppppppppppppppppq\u0000~\u0000\u000fppppppppppppppppppppppppppppq\u0000~\u0000\u0016q"
+"\u0000~\u0000(q\u0000~\u0000.q\u0000~\u00004q\u0000~\u0000:ppppppq\u0000~\u0000\u0015q\u0000~\u0000\'q\u0000~\u0000-q\u0000~\u00003q\u0000~\u00009pppppppppp"
+"pppppppppppppppq\u0000~\u0000\u000eq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0000\u0010ppppppppppppppppppq\u0000~\u0000\rppq\u0000~\u0000\nppppppppppq"
+"\u0000~\u0000\u0007ppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends freemind.controller.actions.generated.instance.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(freemind.controller.actions.generated.instance.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return freemind.controller.actions.generated.instance.impl.MenuCategoryBaseImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        if (("menu_category" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuCategoryImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuCategoryImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_submenu" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuSubmenuImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuSubmenuImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_action" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuActionImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuActionImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_checked_action" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuCheckedActionImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuCheckedActionImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_separator" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuSeparatorImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuSeparatorImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  4 :
                        if (("menu_category" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuCategoryImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuCategoryImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_submenu" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuSubmenuImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuSubmenuImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_action" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuActionImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuActionImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_checked_action" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuCheckedActionImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuCheckedActionImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("menu_separator" == ___local)&&("" == ___uri)) {
                            _MenuCategoryOrMenuSubmenuOrMenuAction.add(((freemind.controller.actions.generated.instance.impl.MenuSeparatorImpl) spawnChildFromEnterElement((freemind.controller.actions.generated.instance.impl.MenuSeparatorImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  3 :
                        state = 4;
                        continue outer;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 4;
                        continue outer;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 4;
                        continue outer;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText0(value);
                            state = 2;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  3 :
                            state = 4;
                            continue outer;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
